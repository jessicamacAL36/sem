name: A workflow for my Hello World App

on: 
  push:
    branches: [ "master", "develop" ] # Triggers on pushes to these branches

jobs:
  build:
    name: Build, Containerize, and Test
    runs-on: ubuntu-latest  # Recommended to use 'latest' unless specific version is required

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      # 1. Setup Java 17 for consistency
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      # 2. Build the Fat JAR (this creates the 'target' folder and the JAR)
      - name: Build and Package with Maven
        run: mvn clean package 
      
      # 3. Setup Docker Network and MongoDB (using the name 'mongodb' as expected by App.java)
      - name: Setup Docker Network and MongoDB
        run: |
          docker network create --driver bridge se-methods
          # Pull and run MongoDB, naming it 'mongodb' for service discovery
          docker run -d --name mongodb --network se-methods mongo:latest

      # 4. Build the Application Docker Image
      - name: Build Application Image
        # The image will be named 'se_methods'
        run: docker build -t se_methods .

      # 5. Run the Application Image on the Network
      - name: Run Application Container
        # Run the app on the same network; use the correct name (se_methods)
        run: docker run --network se-methods --name devopscontainer se_methods

      # 6. View Logs (Confirm successful execution)
      - name: View Application Logs
        # View logs to confirm JSON output and exit code 0
        run: docker logs devopscontainer
        
      # 7. Cleanup (Important for CI/CD environments)
      - name: Cleanup Containers
        if: always() # Runs even if previous steps fail
        run: |
          docker stop mongodb devopscontainer
          docker rm mongodb devopscontainer
          docker network rm se-methods
